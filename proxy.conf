server {
	listen   80;
	listen [::]:80;
    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate     certificate.crt;
    ssl_certificate_key private.key;

    access_log  /var/log/nginx/myhost.access.log;

	merge_slashes off;
	resolver 8.8.8.8;


	server_name ~^(?<subdomains>.+)\.(?<domain>iframe\.tools)$;

	proxy_redirect ~*^(?<protocol>https?://)[^/]+(/(?<location>.*))?$ $protocol$targetdomain.$domain/$location;
    

	location ~^/(?<location>.*)$ {
		
    	proxy_set_header Accept-Encoding ""; # no compression allowed or next won't work

    	# proxy_http_version 1.1;
		gunzip on;
    	gzip_disable ".";
    	sub_filter_types application/javascript;
    	# proxy_request_buffering off;
    	# proxy_max_temp_file_size 0;
		# proxy_buffering off;

		proxy_pass $scheme://$target/$location;

		sub_filter_once off; # Indicates whether to look for each string to replace once or repeatedly. 
		# sub_filter "<base href=" "/*" ;
		sub_filter ".de/\">" "_de.iframe.tools/\">";
		sub_filter ".spotify.com" "_spotify_com.iframe.tools";
		sub_filter ".scdn.co" "_scdn_co.iframe.tools";
		sub_filter ".google.com" "_google_com.iframe.tools";
		sub_filter ".gstatic.com" "_gstatic_com.iframe.tools";
		
	}

	proxy_hide_header X-Frame-Options;
	proxy_hide_header X-Content-Security-Policy;
	proxy_hide_header Content-Security-Policy;
	proxy_hide_header X-Content-Type-Options;
	proxy_hide_header X-Powered-By;
	proxy_hide_header Server;
	proxy_hide_header X-AspNetMvc-Version;
	proxy_hide_header X-AspNet-Version;
}